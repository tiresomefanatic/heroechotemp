{"version":3,"file":"TiptapEditor-CgYO5oW2.js","sources":["../../../../extensions/colorWheelExtension.js","../../../../components/TiptapEditor.vue"],"sourcesContent":["// extensions/colorWheelExtension.js\nimport { Node } from \"@tiptap/core\";\nimport { VueNodeViewRenderer } from \"@tiptap/vue-3\";\nimport ColorWheelNode from \"../components/ColorWheelNode.vue\";\n\nexport default Node.create({\n  name: \"colorWheel\",\n\n  group: \"block\",\n\n  atom: true,\n\n  addAttributes() {\n    return {\n      sportColor: {\n        default: \"#FF6B6B\",\n      },\n      cruiserColor: {\n        default: \"#4ECDC4\",\n      },\n      urbanColor: {\n        default: \"#FFD93D\",\n      },\n      offroadColor: {\n        default: \"#95E1D3\",\n      },\n    };\n  },\n\n  parseHTML() {\n    return [\n      {\n        tag: 'div[data-type=\"color-wheel\"]',\n      },\n    ];\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return [\"div\", { \"data-type\": \"color-wheel\", ...HTMLAttributes }, 0];\n  },\n\n  addNodeView() {\n    return VueNodeViewRenderer(ColorWheelNode);\n  },\n});\n","# TiptapEditor.vue\n<script setup lang=\"ts\">\nimport { ref, computed, watch, onMounted, onBeforeUnmount } from \"vue\";\nimport { Editor, EditorContent } from \"@tiptap/vue-3\";\nimport StarterKit from \"@tiptap/starter-kit\";\nimport Document from \"@tiptap/extension-document\";\nimport Paragraph from \"@tiptap/extension-paragraph\";\nimport { Node } from \"@tiptap/core\";\nimport Heading from \"@tiptap/extension-heading\";\nimport Text from \"@tiptap/extension-text\";\nimport Image from \"@tiptap/extension-image\";\nimport ColorWheelExtension from \"../extensions/colorWheelExtension\";\nimport CollaborationSidebar from \"~/components/CollaborationSidebar.vue\";\nimport { useGithub } from \"~/composables/useGithub\";\nimport { useToast } from \"~/composables/useToast\";\nimport { useNuxtApp } from \"#app\";\nimport AddContentDialog from \"./AddContentDialog.vue\";\nimport type { editor as MonacoEditor } from \"monaco-editor\";\n\ninterface Props {\n  content?: string;\n  filePath: string;\n}\n\nconst handleInsertComponent = (componentId: string) => {\n  if (!editor.value) return;\n\n  switch (componentId) {\n    case \"colorwheel\":\n      editor.value\n        .chain()\n        .focus()\n        .insertContent({\n          type: \"colorWheel\",\n        })\n        .run();\n      break;\n  }\n};\n\nconst templates = {\n  \"split-with-image\": `\n    <div style=\"display: flex; gap: 2rem; margin: 3rem 0;\">\n      <div style=\"flex: 1;\">\n        <h2 style=\"margin: 0; font-size: 1.5rem; font-weight: 600; line-height: 1.4;\">Section Title</h2>\n      </div>\n      <div style=\"flex: 2;\">\n        <div style=\"background: #f5f5f5; padding: 2rem; border-radius: 4px;\">\n          <img src=\"/api/placeholder/800/400\" alt=\"Section Image\" style=\"width: 100%; height: auto; display: block;\" />\n        </div>\n        <h3 style=\"font-size: 1.25rem; font-weight: 600; margin: 1rem 0;\">Add Subtitle</h3>\n        <p style=\"margin: 1rem 0; line-height: 1.6;\">Add your description here.</p>\n        <p style=\"margin: 1rem 0; line-height: 1.6;\">Add additional details here.</p>\n      </div>\n    </div>\n  `,\n  \"split-with-list\": `\n    <div style=\"display: flex; gap: 2rem; margin: 3rem 0;\">\n      <div style=\"flex: 1;\">\n        <h2 style=\"margin: 0; font-size: 1.5rem; font-weight: 600; line-height: 1.4;\">Section Title</h2>\n      </div>\n      <div style=\"flex: 2;\">\n        <img src=\"/api/placeholder/800/400\" alt=\"Section Image\" style=\"width: 100%; height: auto; display: block; padding: 2rem; border-radius: 4px;\" />\n        <p style=\"margin: 1rem 0; line-height: 1.6;\">Add your description here.</p>\n        <ul style=\"list-style: none; padding: 0; margin: 1rem 0;\">\n          <li style=\"margin: 0.5rem 0; line-height: 1.6;\">List item one</li>\n          <li style=\"margin: 0.5rem 0; line-height: 1.6;\">List item two</li>\n          <li style=\"margin: 0.5rem 0; line-height: 1.6;\">List item three</li>\n          <li style=\"margin: 0.5rem 0; line-height: 1.6;\">List item four</li>\n        </ul>\n      </div>\n    </div>\n  `,\n};\n\nconst handleInsertSection = (sectionId: string) => {\n  if (!editor.value) return;\n\n  const template = templates[sectionId];\n  if (template) {\n    editor.value\n      .chain()\n      .focus()\n      .createParagraphNear()\n      .insertContent(template)\n      .focus()\n      .run();\n  }\n};\n\n// Node extensions with style support\nconst StyledDiv = Node.create({\n  name: \"styledDiv\",\n  group: \"block\",\n  content: \"block+\",\n  addAttributes() {\n    return {\n      style: {\n        default: null,\n        parseHTML: (element) => element.getAttribute(\"style\"),\n        renderHTML: (attributes) => {\n          if (!attributes.style) return {};\n          return { style: attributes.style };\n        },\n      },\n      class: {\n        default: null,\n        parseHTML: (element) => element.getAttribute(\"class\"),\n        renderHTML: (attributes) => {\n          if (!attributes.class) return {};\n          return { class: attributes.class };\n        },\n      },\n      \"data-type\": {\n        default: null,\n        parseHTML: (element) => element.getAttribute(\"data-type\"),\n        renderHTML: (attributes) => {\n          if (!attributes[\"data-type\"]) return {};\n          return { \"data-type\": attributes[\"data-type\"] };\n        },\n      },\n    };\n  },\n  parseHTML() {\n    return [{ tag: \"div\" }];\n  },\n  renderHTML({ HTMLAttributes }) {\n    return [\"div\", HTMLAttributes, 0];\n  },\n});\n\nconst GridContainer = Node.create({\n  name: \"gridContainer\",\n  group: \"block\",\n  content: \"block+\",\n  addAttributes() {\n    return {\n      style: {\n        default: null,\n        parseHTML: (element) => element.getAttribute(\"style\"),\n        renderHTML: (attributes) => {\n          if (!attributes.style) return {};\n          return { style: attributes.style };\n        },\n      },\n    };\n  },\n  parseHTML() {\n    return [\n      {\n        tag: \"div\",\n        getAttrs: (node) => {\n          const style = node.getAttribute(\"style\") || \"\";\n          return style.includes(\"grid\") ? {} : false;\n        },\n      },\n    ];\n  },\n  renderHTML({ HTMLAttributes }) {\n    return [\"div\", HTMLAttributes, 0];\n  },\n});\n\nconst StyledParagraph = Paragraph.extend({\n  addAttributes() {\n    return {\n      ...this.parent?.(),\n      style: {\n        default: null,\n        parseHTML: (element) => element.getAttribute(\"style\"),\n        renderHTML: (attributes) => {\n          if (!attributes.style) return {};\n          return { style: attributes.style };\n        },\n      },\n    };\n  },\n});\n\nconst StyledHeading = Heading.extend({\n  addAttributes() {\n    return {\n      ...this.parent?.(),\n      style: {\n        default: null,\n        parseHTML: (element) => element.getAttribute(\"style\"),\n        renderHTML: (attributes) => {\n          if (!attributes.style) return {};\n          return { style: attributes.style };\n        },\n      },\n    };\n  },\n});\n\nconst StyledImage = Image.extend({\n  addAttributes() {\n    return {\n      ...this.parent?.(),\n      style: {\n        default: null,\n        parseHTML: (element) => element.getAttribute(\"style\"),\n        renderHTML: (attributes) => {\n          if (!attributes.style) return {};\n          return { style: attributes.style };\n        },\n      },\n    };\n  },\n});\n\nconst props = defineProps<Props>();\nconst emit = defineEmits<{\n  (e: \"update:content\", value: string): void;\n  (e: \"save\", value: string): void;\n  (e: \"error\", error: Error): void;\n}>();\n\n// State management\nconst localContent = ref(\"\");\nconst originalContent = ref(\"\");\nconst isSaving = ref(false);\nconst previewMode = ref(false);\nconst rawMode = ref(false);\nconst editor = ref<Editor | null>(null);\nconst editorInitialized = ref(false);\nconst previewContent = ref(\"\");\nconst monacoEditor = ref<MonacoEditor.IStandaloneCodeEditor | null>(null);\n\n// Initialize composables\nconst { showToast } = useToast();\nconst github = useGithub();\nconst { isLoggedIn } = github;\n\n// Debug mode detection\nconst showDebugInfo = computed(() => {\n  return process.env.NODE_ENV === \"development\";\n});\n\n/**\n * Helper function to normalize HTML content by handling HTML entities consistently\n */\nconst normalizeHTML = (html: string): string => {\n  const div = document.createElement(\"div\");\n  div.innerHTML = html;\n  return div.innerHTML;\n};\n\nconst formatHTML = (html: string): string => {\n  if (!html) return \"\";\n\n  html = html\n    .replace(\n      /<div[^>]*data-type=\"color-wheel\"[^>]*>.*?<\\/div>/g,\n      \"\\n::color-wheel\\n::\\n\"\n    )\n    .replace(\n      /<div[^>]*data-type=\"test-component\"[^>]*>.*?<\\/div>/g,\n      \"\\n::test-component\\n::\\n\"\n    );\n\n  let formattedHTML = html\n    .replace(/<strong>/g, \"§§STRONG§§\")\n    .replace(/<\\/strong>/g, \"§§/STRONG§§\")\n    .replace(/<em>/g, \"§§EM§§\")\n    .replace(/<\\/em>/g, \"§§/EM§§\");\n\n  formattedHTML = formattedHTML\n    .replace(/></g, \">\\n<\")\n    .replace(\n      /(<div[^>]*>|<\\/div>|<p>|<\\/p>|<h[1-6]>|<\\/h[1-6]>|<ul>|<\\/ul>|<ol>|<\\/ol>|<li>|<\\/li>)/g,\n      (match) => `\\n${match}\\n`\n    )\n    .split(\"\\n\")\n    .map((line) => line.trim())\n    .filter((line) => line.length > 0)\n    .join(\"\\n\");\n\n  formattedHTML = formattedHTML\n    .replace(/§§STRONG§§/g, \"<strong>\")\n    .replace(/§§\\/STRONG§§/g, \"</strong>\")\n    .replace(/§§EM§§/g, \"<em>\")\n    .replace(/§§\\/EM§§/g, \"</em>\");\n\n  return formattedHTML.replace(/\\n{3,}/g, \"\\n\\n\").trim();\n};\n\nconst editorOptions = {\n  theme: \"vs\",\n  language: \"html\",\n  fontSize: 13,\n  lineNumbers: \"on\",\n  renderWhitespace: \"selection\",\n  minimap: {\n    enabled: true,\n    scale: 1,\n    showSlider: \"mouseover\",\n  },\n  scrollBeyondLastLine: false,\n  wordWrap: \"on\",\n  lineHeight: 20,\n  padding: { top: 16, bottom: 16 },\n  folding: true,\n  foldingHighlight: true,\n  foldingStrategy: \"indentation\",\n  showFoldingControls: \"always\",\n  bracketPairColorization: {\n    enabled: true,\n  },\n  autoClosingBrackets: \"always\",\n  autoClosingQuotes: \"always\",\n  autoClosingTags: true,\n  formatOnType: true,\n  formatOnPaste: true,\n  autoIndent: \"advanced\",\n  tabSize: 2,\n  automaticLayout: true,\n  scrollbar: {\n    vertical: \"visible\",\n    horizontal: \"visible\",\n    useShadows: false,\n    verticalHasArrows: false,\n    horizontalHasArrows: false,\n    verticalScrollbarSize: 10,\n    horizontalScrollbarSize: 10,\n  },\n  suggest: {\n    snippetsPreventQuickSuggestions: false,\n    showWords: false,\n    showClasses: true,\n    showTags: true,\n    showAttributes: true,\n  },\n  quickSuggestions: {\n    other: true,\n    comments: false,\n    strings: true,\n  },\n};\n\nconst CustomDocument = Document.extend({\n  content: \"block+\",\n});\n\nconst parseMarkdownToHTML = (content: string): string => {\n  if (!content) return \"\";\n\n  return content\n    .replace(/::color-wheel\\s*::/g, '<div data-type=\"color-wheel\"></div>')\n    .replace(\n      /::test-component\\s*::/g,\n      '<div data-type=\"test-component\"></div>'\n    );\n};\n\nonMounted(() => {\n  editor.value = new Editor({\n    extensions: [\n      StarterKit.configure({\n        document: false,\n        paragraph: false,\n        heading: false,\n        bulletList: false,\n        orderedList: false,\n      }),\n      CustomDocument,\n      StyledParagraph,\n      StyledHeading,\n      StyledImage.configure({\n        inline: true,\n      }),\n      StyledDiv,\n      GridContainer,\n      ColorWheelExtension.configure({\n        HTMLAttributes: {\n          class: \"color-wheel-node\",\n        },\n      }),\n    ],\n    editorProps: {\n      attributes: {\n        class: \"prose-editor\",\n        spellcheck: \"false\",\n      },\n      transformPastedHTML: (html) => {\n        return html;\n      },\n      handleDrop: false,\n      handleClick: () => {\n        // Prevent default click behavior that might cause unwanted selection\n        return true;\n      },\n      handleKeyDown: ({ event }) => {\n        // Allow default keyboard behavior but prevent unwanted selection\n        if (event.key === \"Tab\") {\n          return true;\n        }\n        return false;\n      },\n    },\n    onUpdate: ({ editor: ed }) => {\n      const content = ed.getHTML();\n      if (content === localContent.value) return;\n\n      // Capture cursor position\n      const { from, to } = ed.state.selection;\n\n      // Schedule content update\n      setTimeout(() => {\n        const formattedContent = formatHTML(content);\n        localContent.value = formattedContent;\n        previewContent.value = formattedContent;\n        emit(\"update:content\", formattedContent);\n\n        // Restore cursor position after state updates\n        if (editor.value) {\n          editor.value.commands.setTextSelection({ from, to });\n        }\n      }, 0);\n    },\n    parseOptions: {\n      preserveWhitespace: \"full\",\n    },\n  });\n\n  if (props.content) {\n    const parsedContent = parseMarkdownToHTML(props.content);\n    const formattedContent = formatHTML(parsedContent);\n    editor.value.commands.setContent(formattedContent, false, {\n      preserveWhitespace: \"full\",\n    });\n    localContent.value = formattedContent;\n    originalContent.value = formattedContent;\n    previewContent.value = formattedContent;\n  }\n\n  const initialContent = editor.value.getHTML();\n  if (initialContent) {\n    const formattedContent = formatHTML(initialContent);\n    emit(\"update:content\", formattedContent);\n  }\n\n  editorInitialized.value = true;\n});\n\n// Handle raw content changes\nconst handleRawContentChange = (value: string) => {\n  localContent.value = value;\n  previewContent.value = value;\n  emit(\"update:content\", value);\n};\n// Watch raw mode changes\nwatch(rawMode, (newValue) => {\n  if (editor.value) {\n    if (!newValue) {\n      // When switching from raw mode back to normal mode\n      editor.value.commands.setContent(localContent.value, false, {\n        preserveWhitespace: \"full\",\n      });\n      previewContent.value = localContent.value;\n    }\n  }\n});\n\n// Watch content prop changes\nwatch(\n  () => props.content,\n  (newContent) => {\n    if (!editor.value || newContent === undefined) return;\n\n    const { from, to } = editor.value.state.selection;\n    const parsedContent = parseMarkdownToHTML(newContent);\n\n    // Only update if content actually changed\n    const currentContent = editor.value.getHTML();\n    if (currentContent !== parsedContent) {\n      editor.value.commands.setContent(parsedContent, false);\n\n      setTimeout(() => {\n        if (editor.value) {\n          editor.value.commands.setTextSelection({ from, to });\n        }\n      }, 0);\n    }\n\n    // Update local state without affecting original content\n    const formattedContent = formatHTML(parsedContent);\n    localContent.value = formattedContent;\n    previewContent.value = formattedContent;\n  },\n  { deep: true }\n);\n\nwatch(rawMode, (newValue) => {\n  if (editor.value) {\n    if (!newValue) {\n      // When switching from raw mode back to normal mode\n      editor.value.commands.setContent(localContent.value, false, {\n        preserveWhitespace: \"full\",\n      });\n      previewContent.value = localContent.value;\n    } else {\n      // When switching to raw mode, ensure Monaco editor gets latest content\n      nextTick(() => {\n        if (monacoEditor.value) {\n          monacoEditor.value.setValue(localContent.value);\n        }\n      });\n    }\n  }\n});\n\nconst hasChanges = computed(() => {\n  return localContent.value !== originalContent.value;\n});\n\nconst saveToDisk = async () => {\n  if (!hasChanges.value || isSaving.value) return;\n\n  isSaving.value = true;\n  try {\n    if (!isLoggedIn.value) {\n      throw new Error(\"Please log in to GitHub first\");\n    }\n\n    if (process.client) {\n      const nuxtApp = useNuxtApp();\n      const storage = nuxtApp.$content?.storage;\n      if (storage) {\n        await storage.clearAll();\n      }\n    }\n\n    emit(\"save\", localContent.value);\n    originalContent.value = localContent.value;\n  } catch (error) {\n    console.error(\"Save error:\", error);\n    showToast({\n      title: \"Error\",\n      message:\n        error instanceof Error ? error.message : \"Failed to save changes\",\n      type: \"error\",\n    });\n    emit(\"error\", error as Error);\n  } finally {\n    isSaving.value = false;\n  }\n};\n\nonBeforeUnmount(() => {\n  if (editor.value) {\n    editor.value.destroy();\n  }\n  if (monacoEditor.value) {\n    monacoEditor.value.dispose();\n  }\n});\n</script>\n\n<template>\n  <div class=\"editor-wrapper\">\n    <!-- <div v-if=\"showDebugInfo\" class=\"debug-info\">\n      <div class=\"debug-panel\">\n        <pre>Has changes: {{ hasChanges }}</pre>\n        <pre>Local content length: {{ localContent?.length }}</pre>\n        <pre>Original content length: {{ originalContent?.length }}</pre>\n        <pre>Preview mode: {{ previewMode }}</pre>\n        <pre>Raw mode: {{ rawMode }}</pre>\n        <pre>Editor initialized: {{ editorInitialized }}</pre>\n      </div>\n    </div> -->\n\n    <div v-if=\"!isLoggedIn\" class=\"login-prompt\">\n      <p class=\"login-message\">Please sign in with GitHub to edit this file</p>\n      <button @click=\"github.login\" class=\"login-button\">\n        Sign in with GitHub\n      </button>\n    </div>\n\n    <div v-else class=\"editor-layout\">\n      <div class=\"editor-main\">\n        <div class=\"editor-toolbar\">\n          <div class=\"toolbar-left\">\n            <span class=\"file-path\">{{ props.filePath }}</span>\n          </div>\n\n          <div class=\"toolbar-right\">\n            <!-- Editor View -->\n            <template v-if=\"!previewMode && !rawMode\">\n              <button class=\"toolbar-button\" @click=\"rawMode = true\">\n                Raw\n              </button>\n              <button class=\"toolbar-button\" @click=\"previewMode = true\">\n                Preview\n              </button>\n              <button\n                v-if=\"hasChanges && !isSaving\"\n                class=\"toolbar-button primary\"\n                @click=\"saveToDisk\"\n              >\n                Commit Changes\n              </button>\n            </template>\n\n            <!-- Raw View -->\n            <template v-if=\"rawMode\">\n              <button class=\"toolbar-button\" @click=\"rawMode = false\">\n                Normal\n              </button>\n              <button\n                class=\"toolbar-button\"\n                @click=\"\n                  previewMode = true;\n                  rawMode = false;\n                \"\n              >\n                Preview\n              </button>\n              <button\n                v-if=\"hasChanges && !isSaving\"\n                class=\"toolbar-button primary\"\n                @click=\"saveToDisk\"\n              >\n                Commit Changes\n              </button>\n            </template>\n\n            <!-- Preview View -->\n            <template v-if=\"previewMode\">\n              <button class=\"toolbar-button\" @click=\"previewMode = false\">\n                Edit\n              </button>\n              <button\n                v-if=\"hasChanges && !isSaving\"\n                class=\"toolbar-button primary\"\n                @click=\"saveToDisk\"\n              >\n                Commit Changes\n              </button>\n            </template>\n\n            <button v-if=\"isSaving\" class=\"toolbar-button loading\" disabled>\n              Saving...\n            </button>\n          </div>\n        </div>\n\n        <div class=\"editor-content\">\n          <!-- Editor View -->\n          <template v-if=\"!previewMode && !rawMode\">\n            <div class=\"tiptap-toolbar\" v-if=\"editor\">\n              <button\n                @click=\"editor.chain().focus().toggleBold().run()\"\n                :class=\"{ 'is-active': editor.isActive('bold') }\"\n              >\n                Bold\n              </button>\n              <button\n                @click=\"editor.chain().focus().toggleItalic().run()\"\n                :class=\"{ 'is-active': editor.isActive('italic') }\"\n              >\n                Italic\n              </button>\n              <button\n                @click=\"\n                  editor.chain().focus().toggleHeading({ level: 1 }).run()\n                \"\n                :class=\"{\n                  'is-active': editor.isActive('heading', { level: 1 }),\n                }\"\n              >\n                H1\n              </button>\n              <button\n                @click=\"\n                  editor.chain().focus().toggleHeading({ level: 2 }).run()\n                \"\n                :class=\"{\n                  'is-active': editor.isActive('heading', { level: 2 }),\n                }\"\n              >\n                H2\n              </button>\n              <button\n                @click=\"editor.chain().focus().toggleBulletList().run()\"\n                :class=\"{ 'is-active': editor.isActive('bulletList') }\"\n              >\n                List\n              </button>\n              <AddContentDialog\n                :onInsertComponent=\"handleInsertComponent\"\n                :onInsertSection=\"handleInsertSection\"\n              />\n            </div>\n            <editor-content\n              v-if=\"editorInitialized\"\n              :editor=\"editor\"\n              class=\"markdown-editor\"\n              :class=\"{ 'has-changes': hasChanges }\"\n            />\n          </template>\n\n          <!-- Raw View -->\n          <div v-else-if=\"rawMode\" class=\"raw-content-wrapper\">\n            <MonacoEditor\n              v-model=\"localContent\"\n              class=\"monaco-editor\"\n              :options=\"editorOptions\"\n              @change=\"handleRawContentChange\"\n              @mount=\"(editor) => (monacoEditor = editor)\"\n            />\n          </div>\n\n          <!-- Preview View -->\n          <div v-else class=\"preview-wrapper\">\n            <div class=\"prose\" v-html=\"previewContent\"></div>\n          </div>\n        </div>\n      </div>\n\n      <CollaborationSidebar />\n    </div>\n  </div>\n</template>\n\n<style>\n.editor-wrapper {\n  height: calc(100vh - 64px);\n  display: flex;\n  flex-direction: column;\n  background: white;\n}\n\n.debug-info {\n  position: fixed;\n  top: 0;\n  right: 0;\n  z-index: 1000;\n  background: rgba(0, 0, 0, 0.8);\n  color: white;\n  padding: 10px;\n  font-family: monospace;\n  font-size: 12px;\n  max-width: 400px;\n  overflow: auto;\n}\n\n.debug-panel pre {\n  margin: 5px 0;\n  white-space: pre-wrap;\n}\n\n.editor-layout {\n  flex: 1;\n  display: flex;\n  overflow: hidden;\n}\n\n.editor-main {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  min-width: 0;\n  background: white;\n}\n\n.editor-content {\n  flex: 1;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  background: white;\n  overflow: hidden;\n}\n\n.markdown-editor {\n  flex: 1;\n  overflow-y: auto;\n  padding: 2rem;\n  background: white;\n}\n\n.markdown-editor.has-changes {\n  background: #fafafa;\n}\n\n.preview-wrapper {\n  flex: 1;\n  overflow-y: auto;\n  padding: 2rem;\n  background: white;\n}\n\n.preview-content {\n  max-width: 720px;\n  margin: 0 auto;\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica,\n    Arial, sans-serif;\n}\n\n.prose {\n  color: #000000;\n  font-size: 16px;\n  line-height: 1.6;\n}\n\n.prose h1 {\n  font-size: 2em;\n  margin: 1.2em 0 0.6em;\n  font-weight: 600;\n  line-height: 1.2;\n}\n\n.prose h2 {\n  font-size: 1.5em;\n  margin: 1em 0 0.5em;\n  font-weight: 600;\n  line-height: 1.3;\n}\n\n.prose p {\n  margin: 1em 0;\n}\n\n.prose ul,\n.prose ol {\n  margin: 1em 0;\n  padding-left: 1.5em;\n}\n\n.prose li {\n  margin: 0.5em 0;\n}\n\n.prose img {\n  max-width: 100%;\n  height: auto;\n  margin: 1.5em 0;\n}\n\n.prose-editor {\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica,\n    Arial, sans-serif;\n  font-size: 16px;\n  line-height: 1.5;\n  color: #000000;\n}\n\n.editor-toolbar {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0.5rem 1rem;\n  background: white;\n  border-bottom: 1px solid #e5e7eb;\n}\n\n.tiptap-toolbar {\n  padding: 0.5rem;\n  display: flex;\n  gap: 0.5rem;\n  flex-wrap: wrap;\n  background: white;\n  border-bottom: 1px solid #e5e7eb;\n}\n\n.tiptap-toolbar button,\n.toolbar-button {\n  padding: 0.5rem 1rem;\n  border: 1px solid #e5e7eb;\n  border-radius: 6px;\n  background: white;\n  color: #374151;\n  cursor: pointer;\n  font-size: 0.875rem;\n  transition: all 0.2s;\n}\n\n.tiptap-toolbar button:hover,\n.toolbar-button:hover {\n  background: #f9fafb;\n}\n\n.tiptap-toolbar button.is-active {\n  background: #f3f4f6;\n  border-color: #d1d5db;\n}\n\n.toolbar-button.primary {\n  background: #4361ee;\n  color: white;\n  border-color: #4361ee;\n}\n\n.toolbar-button.primary:hover {\n  background: #3651d4;\n}\n\n.toolbar-button.active {\n  background: #f3f4f6;\n  border-color: #d1d5db;\n}\n\n.toolbar-button.loading {\n  opacity: 0.7;\n  cursor: not-allowed;\n}\n\n.file-path {\n  color: #374151;\n  font-size: 0.875rem;\n}\n\n.login-prompt {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 1rem;\n  padding: 2rem;\n  background: #1e1e1e;\n  color: #cccccc;\n}\n\n.login-button {\n  padding: 0.5rem 1rem;\n  border: 1px solid #3c3c3c;\n  border-radius: 4px;\n  background: #252526;\n  color: #cccccc;\n  cursor: pointer;\n  font-size: 0.875rem;\n  transition: all 0.2s ease;\n}\n\n.login-button:hover {\n  background: #2d2d2d;\n}\n\n.raw-content-wrapper {\n  flex: 1;\n  display: flex;\n  background: #1e1e1e;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n}\n\n.monaco-editor {\n  width: 100%;\n  height: 100%;\n}\n\n.prose-editor h1 {\n  font-size: 2em;\n  font-weight: 600;\n  margin: 1em 0 0.5em;\n}\n\n.prose-editor h2 {\n  font-size: 1.5em;\n  font-weight: 600;\n  margin: 1em 0 0.5em;\n}\n\n.prose-editor h3 {\n  font-size: 1.25em;\n  font-weight: 600;\n  margin: 1em 0 0.5em;\n}\n\n.prose-editor p {\n  margin: 1em 0;\n}\n\n.prose-editor ul,\n.prose-editor ol {\n  margin: 1em 0;\n  padding-left: 1.5em;\n}\n\n.prose-editor li {\n  margin: 0.5em 0;\n}\n\n.prose-editor img {\n  max-width: 100%;\n  height: auto;\n  display: block;\n  margin: 1.5em 0;\n  background: #f5f5f5;\n  padding: 2rem;\n  border-radius: 4px;\n}\n\n.color-wheel-node {\n  margin: 1rem 0;\n  padding: 1rem;\n  background: #f5f5f5;\n  border-radius: 4px;\n}\n</style>\n"],"names":[],"mappings":"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"}