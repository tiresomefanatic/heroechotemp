{"file":"CollaborationSidebar-DFU81baI.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAoRM,UAAA,OAAO,IAAI,KAAK;AAChB,UAAA,YAAY,IAAI,UAAU;AAC1B,UAAA,UAAU,IAAI,KAAK;AACnB,UAAA,eAAe,IAAmB,EAAE;AACpC,UAAA,UAAU,IAAc,EAAE;AAC1B,UAAA,kBAAkB,IAAqB,IAAI;AAC3C,UAAA,kBAAkB,IAA4B,SAAS;AACvD,UAAA,gBAAgB,IAAI,EAAE;AACtB,UAAA,eAAe,IAAI,KAAK;AAGxB,UAAA,EAAE,UAAU,IAAI,SAAS;AACzB,UAAA;AAAA,MACJ;AAAA,MACA;AAAA,MACA,iBAAiB;AAAA,MACjB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,QACE,UAAU;AAGR,UAAA,OAAO,SAAS,MAAM;AAAA,MAC1B;AAAA,QACE,IAAI;AAAA,QACJ,OAAO;AAAA,QACP,OAAO,aAAa,MAAM;AAAA,MAC5B;AAAA,MACA;AAAA,QACE,IAAI;AAAA,QACJ,OAAO;AAAA,QACP,OAAO,QAAQ,MAAM;AAAA,MACvB;AAAA,MACA;AAAA,QACE,IAAI;AAAA,QACJ,OAAO;AAAA,QACP,OAAO,aAAa,MAAM,OAAO,CAAC,OAAO,GAAG,cAAc,KAAK,EAAE;AAAA,MACnE;AAAA,MACA;AAAA,QACE,IAAI;AAAA,QACJ,OAAO;AAAA,QACP,OAAO,SAAS,MAAM;AAAA,MAAA;AAAA,IACxB,CACD;AAGK,UAAA,YAAY,OAAO,aAAa;AACpC,UAAI,UAAU;AACZ,cAAM,cAAc;AAAA,MAAA;AAAA,IACtB,CACD;AAGK,UAAA,aAAa,CAAC,SAAyB;AAC3C,aAAO,IAAI,KAAK,IAAI,EAAE,mBAAmB,SAAS;AAAA,QAChD,OAAO;AAAA,QACP,KAAK;AAAA,QACL,MAAM;AAAA,MAAA,CACP;AAAA,IACH;AAGM,UAAA,cAAc,CAAC,OAA4B;AAC3C,UAAA,GAAG,cAAc,MAAc,QAAA;AAC/B,UAAA,GAAG,cAAc,KAAa,QAAA;AAC3B,aAAA;AAAA,IACT;AAaA,UAAM,kBAAkB,YAAY;AAClC,mBAAa,QAAQ;AACrB,YAAM,iBAAiB;AAAA,IACzB;AA8CA,UAAM,mBAAmB,YAAY;AACnC,cAAQ,QAAQ;AACZ,UAAA;AACI,cAAA,MAAM,MAAM,gBAAgB;AAClC,qBAAa,QAAQ;AAAA,eACd,OAAO;AACN,gBAAA,MAAM,gCAAgC,KAAK;AACnD,kBAAU,gCAAgC,OAAO;AAAA,MAAA,UACjD;AACA,gBAAQ,QAAQ;AAAA,MAAA;AAAA,IAEpB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["../../../../components/CollaborationSidebar.vue"],"sourcesContent":["<template>\n  <div class=\"collaboration-sidebar\" :class=\"{ open }\">\n    <!-- Toggle button -->\n    <button class=\"toggle-button\" @click=\"toggleSidebar\">\n      <svg class=\"icon\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n        <path\n          v-if=\"!open\"\n          fill=\"currentColor\"\n          d=\"M21 15.75c0-.414-.336-.75-.75-.75H3.75a.75.75 0 0 0 0 1.5h16.5a.75.75 0 0 0 .75-.75ZM21 12c0-.414-.336-.75-.75-.75H3.75a.75.75 0 0 0 0 1.5h16.5a.75.75 0 0 0 .75-.75ZM3.75 9h16.5a.75.75 0 0 0 0-1.5H3.75a.75.75 0 0 0 0 1.5Z\"\n        />\n        <path\n          v-else\n          fill=\"currentColor\"\n          d=\"M5.72 5.72a.75.75 0 0 1 1.06 0L12 10.94l5.22-5.22a.75.75 0 1 1 1.06 1.06L13.06 12l5.22 5.22a.75.75 0 1 1-1.06 1.06L12 13.06l-5.22 5.22a.75.75 0 0 1-1.06-1.06L10.94 12 5.72 6.78a.75.75 0 0 1 0-1.06Z\"\n        />\n      </svg>\n    </button>\n\n    <div class=\"sidebar-content\">\n      <!-- Navigation tabs -->\n      <div class=\"tabs\">\n        <button\n          v-for=\"tab in tabs\"\n          :key=\"tab.id\"\n          class=\"tab-button\"\n          :class=\"{ active: activeTab === tab.id }\"\n          @click=\"activeTab = tab.id\"\n        >\n          {{ tab.label }}\n          <span v-if=\"tab.count\" class=\"count\">{{ tab.count }}</span>\n        </button>\n      </div>\n\n      <!-- Pull Requests Tab -->\n      <div v-if=\"activeTab === 'prs'\" class=\"tab-content\">\n        <div class=\"pr-actions-header\">\n          <button\n            class=\"create-pr-button\"\n            @click=\"showCreatePR = true\"\n            v-if=\"!showCreatePR\"\n          >\n            Create Pull Request\n          </button>\n        </div>\n\n        <CreatePullRequest\n          v-if=\"showCreatePR\"\n          :branches=\"branches\"\n          :currentBranch=\"currentBranch\"\n          @created=\"handlePRCreated\"\n          @cancel=\"showCreatePR = false\"\n        />\n\n        <div v-else-if=\"loading\" class=\"loading\">\n          <div class=\"spinner\"></div>\n          Loading pull requests...\n        </div>\n        <div v-else-if=\"pullRequests.length === 0\" class=\"empty-state\">\n          No open pull requests\n        </div>\n        <div v-else class=\"pr-list\">\n          <div\n            v-for=\"pr in pullRequests\"\n            :key=\"pr.number\"\n            class=\"pr-item\"\n            :class=\"{ 'has-conflicts': pr.mergeable === false }\"\n          >\n            <div class=\"pr-header\">\n              <span class=\"pr-number\">#{{ pr.number }}</span>\n              <span class=\"pr-title\">{{ pr.title }}</span>\n            </div>\n            <div class=\"pr-meta\">\n              <span class=\"pr-author\">\n                <img\n                  :src=\"pr.user.avatar_url\"\n                  :alt=\"pr.user.login\"\n                  class=\"author-avatar\"\n                />\n                {{ pr.user.login }}\n              </span>\n              <span class=\"pr-status\" :class=\"pr.mergeable_state\">\n                {{ getPRStatus(pr) }}\n              </span>\n            </div>\n            <div class=\"pr-actions\">\n              <button class=\"action-button view\" @click=\"openPR(pr.html_url)\">\n                View on GitHub\n              </button>\n              <button\n                v-if=\"pr.mergeable === false\"\n                class=\"action-button resolve\"\n                @click=\"resolveConflicts(pr)\"\n              >\n                Resolve Conflicts\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- History Tab -->\n      <div v-if=\"activeTab === 'history'\" class=\"tab-content\">\n        <div v-if=\"loading\" class=\"loading\">\n          <div class=\"spinner\"></div>\n          Loading commit history...\n        </div>\n        <div v-else-if=\"commits.length === 0\" class=\"empty-state\">\n          No commit history available\n        </div>\n        <div v-else class=\"commit-list\">\n          <div v-for=\"commit in commits\" :key=\"commit.sha\" class=\"commit-item\">\n            <div class=\"commit-header\">\n              <span class=\"commit-message\">{{ commit.commit.message }}</span>\n            </div>\n            <div class=\"commit-meta\">\n              <span class=\"commit-author\">\n                <img\n                  v-if=\"commit.author?.avatar_url\"\n                  :src=\"commit.author.avatar_url\"\n                  :alt=\"commit.commit.author.name\"\n                  class=\"author-avatar\"\n                />\n                {{ commit.commit.author.name }}\n              </span>\n              <span class=\"commit-date\">\n                {{ formatDate(commit.commit.author.date) }}\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Conflicts Tab -->\n      <div v-if=\"activeTab === 'conflicts'\" class=\"tab-content\">\n        <div v-if=\"currentConflict\" class=\"conflict-resolver\">\n          <div class=\"conflict-header\">\n            <h3>Resolve Conflicts</h3>\n            <p>Choose which changes to keep for {{ currentConflict.file }}</p>\n          </div>\n          <div class=\"conflict-diff\">\n            <div class=\"diff-header\">\n              <button\n                class=\"diff-button\"\n                :class=\"{ active: selectedVersion === 'current' }\"\n                @click=\"selectedVersion = 'current'\"\n              >\n                Current Changes\n              </button>\n              <button\n                class=\"diff-button\"\n                :class=\"{ active: selectedVersion === 'incoming' }\"\n                @click=\"selectedVersion = 'incoming'\"\n              >\n                Incoming Changes\n              </button>\n            </div>\n            <div class=\"diff-content\">\n              <pre\n                v-if=\"selectedVersion === 'current'\"\n                class=\"diff-view current\"\n              >\n                {{ currentConflict.current }}\n              </pre>\n              <pre v-else class=\"diff-view incoming\">\n                {{ currentConflict.incoming }}\n              </pre>\n            </div>\n          </div>\n          <div class=\"conflict-actions\">\n            <button\n              class=\"action-button cancel\"\n              @click=\"cancelConflictResolution\"\n            >\n              Cancel\n            </button>\n            <button class=\"action-button resolve\" @click=\"resolveConflict\">\n              Accept\n              {{ selectedVersion === \"current\" ? \"Current\" : \"Incoming\" }}\n              Changes\n            </button>\n          </div>\n        </div>\n        <div v-else class=\"empty-state\">No conflicts to resolve</div>\n      </div>\n\n      <!-- Branch Management Tab -->\n      <div v-if=\"activeTab === 'branches'\" class=\"tab-content\">\n        <div class=\"section\">\n          <h3>Branch Management</h3>\n          <div v-if=\"isLoggedIn\" class=\"branch-controls\">\n            <div class=\"branch-controls\">\n              <div class=\"current-branch\">\n                <span class=\"label\">Current Branch:</span>\n                <select :value=\"currentBranch\" @change=\"handleBranchChange\">\n                  <option\n                    v-for=\"branch in branches\"\n                    :key=\"branch\"\n                    :value=\"branch\"\n                  >\n                    {{ branch }}\n                  </option>\n                </select>\n              </div>\n              <div class=\"new-branch\">\n                <input\n                  v-model=\"newBranchName\"\n                  placeholder=\"New branch name\"\n                  @keyup.enter=\"createNewBranch\"\n                />\n                <button\n                  class=\"create-branch\"\n                  :disabled=\"!newBranchName || loading\"\n                  @click=\"createNewBranch\"\n                >\n                  Create Branch\n                </button>\n              </div>\n            </div>\n          </div>\n          <div v-else class=\"login-prompt\">\n            <p>Please log in to manage branches</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed, onMounted, watch } from \"vue\";\nimport { useGithub } from \"~/composables/useGithub\";\nimport { useToast } from \"~/composables/useToast\";\nimport CreatePullRequest from \"./CreatePullRequest.vue\";\n\n// Define TypeScript interfaces for our data structures\ninterface GitHubUser {\n  login: string;\n  avatar_url: string;\n  name?: string;\n}\n\ninterface PullRequest {\n  number: number;\n  title: string;\n  user: GitHubUser;\n  html_url: string;\n  mergeable: boolean;\n  mergeable_state: string;\n  files?: Array<{\n    filename: string;\n    patch?: string;\n  }>;\n}\n\ninterface Commit {\n  sha: string;\n  commit: {\n    message: string;\n    author: {\n      name: string;\n      date: string;\n    };\n  };\n  author?: {\n    avatar_url: string;\n  };\n}\n\ninterface Conflict {\n  file: string;\n  current: string;\n  incoming: string;\n  pr: PullRequest;\n}\n\n// Component state management\nconst open = ref(false);\nconst activeTab = ref(\"branches\");\nconst loading = ref(false);\nconst pullRequests = ref<PullRequest[]>([]);\nconst commits = ref<Commit[]>([]);\nconst currentConflict = ref<Conflict | null>(null);\nconst selectedVersion = ref<\"current\" | \"incoming\">(\"current\");\nconst newBranchName = ref(\"\");\nconst showCreatePR = ref(false);\n\n// Initialize composables\nconst { showToast } = useToast();\nconst {\n  getPullRequests,\n  getCommits,\n  resolveConflict: resolveGitHubConflict,\n  fetchBranches,\n  createBranch,\n  switchBranch,\n  currentBranch,\n  branches,\n  isLoggedIn,\n} = useGithub();\n\n// Computed properties for navigation tabs\nconst tabs = computed(() => [\n  {\n    id: \"prs\",\n    label: \"Pull Requests\",\n    count: pullRequests.value.length,\n  },\n  {\n    id: \"history\",\n    label: \"History\",\n    count: commits.value.length,\n  },\n  {\n    id: \"conflicts\",\n    label: \"Conflicts\",\n    count: pullRequests.value.filter((pr) => pr.mergeable === false).length,\n  },\n  {\n    id: \"branches\",\n    label: \"Branches\",\n    count: branches.value.length,\n  },\n]);\n\n// Watch for login state changes\nwatch(isLoggedIn, async (newValue) => {\n  if (newValue) {\n    await fetchBranches();\n  }\n});\n\n// Utility function to format dates consistently\nconst formatDate = (date: string): string => {\n  return new Date(date).toLocaleDateString(\"en-US\", {\n    month: \"short\",\n    day: \"numeric\",\n    year: \"numeric\",\n  });\n};\n\n// Get the status text for a pull request based on its mergeable state\nconst getPRStatus = (pr: PullRequest): string => {\n  if (pr.mergeable === false) return \"Has Conflicts\";\n  if (pr.mergeable === true) return \"Ready to Merge\";\n  return \"Checking\";\n};\n\n// Toggle sidebar visibility\nconst toggleSidebar = () => {\n  open.value = !open.value;\n};\n\n// Handle external link clicks\nconst openPR = (url: string) => {\n  window.open(url, \"_blank\");\n};\n\n// Handle PR creation success\nconst handlePRCreated = async () => {\n  showCreatePR.value = false;\n  await loadPullRequests();\n};\n\n// Conflict resolution handling\nconst resolveConflicts = (pr: PullRequest) => {\n  if (!pr.files?.[0]) {\n    showToast(\"No files found in pull request\", \"error\");\n    return;\n  }\n\n  currentConflict.value = {\n    file: pr.files[0].filename,\n    current: pr.files[0].patch || \"\",\n    incoming: pr.files[0].patch || \"\",\n    pr,\n  };\n  activeTab.value = \"conflicts\";\n};\n\nconst resolveConflict = async () => {\n  if (!currentConflict.value) return;\n\n  loading.value = true;\n  try {\n    await resolveGitHubConflict(\n      currentConflict.value.pr.number,\n      currentConflict.value.file,\n      selectedVersion.value === \"current\" ? \"ours\" : \"theirs\"\n    );\n\n    showToast(\"Conflict resolved successfully!\", \"success\");\n    currentConflict.value = null;\n    await loadPullRequests(); // Refresh PR list\n  } catch (error) {\n    console.error(\"Error resolving conflict:\", error);\n    showToast(\"Failed to resolve conflict. Please try again.\", \"error\");\n  } finally {\n    loading.value = false;\n  }\n};\n\nconst cancelConflictResolution = () => {\n  currentConflict.value = null;\n  selectedVersion.value = \"current\";\n};\n\n// Data loading functions\nconst loadPullRequests = async () => {\n  loading.value = true;\n  try {\n    const prs = await getPullRequests();\n    pullRequests.value = prs;\n  } catch (error) {\n    console.error(\"Error loading pull requests:\", error);\n    showToast(\"Failed to load pull requests\", \"error\");\n  } finally {\n    loading.value = false;\n  }\n};\n\nconst loadCommits = async () => {\n  loading.value = true;\n  try {\n    const commitHistory = await getCommits();\n    commits.value = commitHistory;\n  } catch (error) {\n    console.error(\"Error loading commits:\", error);\n    showToast(\"Failed to load commits\", \"error\");\n  } finally {\n    loading.value = false;\n  }\n};\n\n// Initialize data when component mounts\nonMounted(async () => {\n  if (isLoggedIn.value) {\n    loading.value = true;\n    try {\n      await Promise.all([loadPullRequests(), loadCommits(), fetchBranches()]);\n    } finally {\n      loading.value = false;\n    }\n  }\n});\n\n// Handle branch switching\nconst handleBranchChange = async (event: Event) => {\n  const select = event.target as HTMLSelectElement;\n  const branchName = select.value;\n\n  try {\n    loading.value = true;\n    console.log(`Attempting to switch to branch: ${branchName}`);\n    const success = await switchBranch(branchName);\n\n    if (success) {\n      showToast({\n        title: \"Success\",\n        message: `Switched to branch: ${branchName}`,\n        type: \"success\",\n      });\n      await fetchBranches(); // Refresh branch list\n    } else {\n      throw new Error(\"Failed to switch branch\");\n    }\n  } catch (error) {\n    console.error(\"Error switching branch:\", error);\n    showToast({\n      title: \"Error\",\n      message:\n        error instanceof Error ? error.message : \"Failed to switch branch\",\n      type: \"error\",\n    });\n    // Reset selection on error\n    select.value = currentBranch.value;\n  } finally {\n    loading.value = false;\n  }\n};\n\n// Create new branch\nconst createNewBranch = async () => {\n  if (!newBranchName.value) return;\n\n  try {\n    loading.value = true;\n    console.log(`Creating new branch: ${newBranchName.value}`);\n    const result = await createBranch(newBranchName.value);\n\n    if (result) {\n      showToast({\n        title: \"Success\",\n        message: `Created and switched to branch: ${newBranchName.value}`,\n        type: \"success\",\n      });\n      await fetchBranches(); // Refresh branch list\n      newBranchName.value = \"\"; // Clear input\n    } else {\n      throw new Error(\"Failed to create branch\");\n    }\n  } catch (error) {\n    console.error(\"Error creating branch:\", error);\n    showToast({\n      title: \"Error\",\n      message:\n        error instanceof Error ? error.message : \"Failed to create branch\",\n      type: \"error\",\n    });\n  } finally {\n    loading.value = false;\n  }\n};\n</script>\n\n<style scoped>\n.collaboration-sidebar {\n  position: fixed;\n  top: 64px;\n  right: -400px;\n  width: 400px;\n  height: calc(100vh - 64px);\n  background: white;\n  box-shadow: -2px 0 8px rgba(0, 0, 0, 0.1);\n  transition: right 0.3s ease;\n  z-index: 90;\n  display: flex;\n}\n\n.collaboration-sidebar.open {\n  right: 0;\n}\n\n.toggle-button {\n  position: absolute;\n  left: -40px;\n  top: 1rem;\n  width: 40px;\n  height: 40px;\n  background: white;\n  border: 1px solid #eee;\n  border-right: none;\n  border-radius: 0.5rem 0 0 0.5rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  color: #666;\n  transition: all 0.2s;\n}\n\n.toggle-button:hover {\n  color: var(--echo-orange);\n}\n\n.sidebar-content {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n}\n\n.tabs {\n  display: flex;\n  border-bottom: 1px solid #eee;\n}\n\n.tab-button {\n  flex: 1;\n  padding: 1rem;\n  border: none;\n  background: none;\n  color: #666;\n  font-size: 0.875rem;\n  cursor: pointer;\n  transition: all 0.2s;\n  position: relative;\n}\n\n.tab-button.active {\n  color: var(--echo-orange);\n}\n\n.tab-button.active::after {\n  content: \"\";\n  position: absolute;\n  bottom: -1px;\n  left: 0;\n  right: 0;\n  height: 2px;\n  background: var(--echo-orange);\n}\n\n.count {\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  min-width: 20px;\n  height: 20px;\n  padding: 0 6px;\n  margin-left: 0.5rem;\n  background: #eee;\n  border-radius: 10px;\n  font-size: 0.75rem;\n  color: #666;\n}\n\n.tab-content {\n  flex: 1;\n  overflow-y: auto;\n  padding: 1rem;\n}\n\n.loading {\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n  padding: 2rem;\n  color: #666;\n}\n\n.spinner {\n  width: 1.5rem;\n  height: 1.5rem;\n  border: 2px solid #eee;\n  border-right-color: var(--echo-orange);\n  border-radius: 50%;\n  animation: spin 0.8s linear infinite;\n}\n\n.empty-state {\n  text-align: center;\n  padding: 2rem;\n  color: #666;\n}\n\n.pr-list,\n.commit-list {\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n}\n\n.pr-item,\n.commit-item {\n  padding: 1rem;\n  border: 1px solid #eee;\n  border-radius: 0.5rem;\n  background: white;\n}\n\n.pr-item.has-conflicts {\n  border-color: #fecaca;\n  background: #fff5f5;\n}\n\n.pr-header,\n.commit-header {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  margin-bottom: 0.5rem;\n}\n\n.pr-number {\n  color: #666;\n  font-size: 0.875rem;\n}\n\n.pr-title,\n.commit-message {\n  font-weight: 500;\n  color: #333;\n}\n\n.pr-meta,\n.commit-meta {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 1rem;\n  font-size: 0.875rem;\n  color: #666;\n}\n\n.pr-author,\n.commit-author {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n.author-avatar {\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n}\n\n.pr-status {\n  padding: 0.25rem 0.5rem;\n  border-radius: 0.25rem;\n  font-size: 0.75rem;\n}\n\n.pr-status.clean {\n  background: #dcfce7;\n  color: #166534;\n}\n\n.pr-status.unstable {\n  background: #fef9c3;\n  color: #854d0e;\n}\n\n.pr-status.dirty {\n  background: #fecaca;\n  color: #991b1b;\n}\n\n.pr-actions,\n.commit-actions {\n  display: flex;\n  gap: 0.5rem;\n}\n\n.action-button {\n  flex: 1;\n  padding: 0.5rem;\n  border: 1px solid #eee;\n  border-radius: 0.25rem;\n  background: white;\n  color: #666;\n  font-size: 0.875rem;\n  cursor: pointer;\n  transition: all 0.2s;\n}\n\n.action-button:hover {\n  border-color: var(--echo-orange);\n  color: var(--echo-orange);\n}\n\n.action-button.resolve {\n  background: var(--echo-orange);\n  color: white;\n  border-color: var(--echo-orange);\n}\n\n.action-button.resolve:hover {\n  background: white;\n}\n\n.conflict-resolver {\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n}\n\n.conflict-header {\n  padding: 1rem;\n  border-bottom: 1px solid #eee;\n}\n\n.conflict-diff {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n}\n\n.diff-header {\n  display: flex;\n  gap: 0.5rem;\n  padding: 0.5rem;\n  background: #f8f9fa;\n}\n\n.diff-button {\n  padding: 0.5rem 1rem;\n  border: 1px solid #eee;\n  border-radius: 0.25rem;\n  background: white;\n  color: #666;\n  font-size: 0.875rem;\n  cursor: pointer;\n  transition: all 0.2s;\n}\n\n.diff-button.active {\n  background: var(--echo-orange);\n  color: white;\n  border-color: var(--echo-orange);\n}\n\n.diff-content {\n  flex: 1;\n  overflow: auto;\n  padding: 1rem;\n}\n\n.diff-view {\n  margin: 0;\n  font-family: \"Monaco\", monospace;\n  font-size: 0.875rem;\n  line-height: 1.5;\n  white-space: pre-wrap;\n}\n\n.diff-view.current {\n  color: #059669;\n}\n\n.diff-view.incoming {\n  color: #2563eb;\n}\n\n.conflict-actions {\n  display: flex;\n  justify-content: flex-end;\n  gap: 0.5rem;\n  padding: 1rem;\n  border-top: 1px solid #eee;\n}\n\n.section {\n  margin-bottom: 2rem;\n}\n\nh3 {\n  font-size: 1.1rem;\n  margin-bottom: 1rem;\n  color: #343a40;\n}\n\n.branch-controls {\n  padding: 1rem;\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  color: #000;\n}\n\n.current-branch {\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n}\n\n.current-branch .label {\n  color: #000;\n  font-weight: 500;\n}\n\n.current-branch select {\n  width: 100%;\n  padding: 0.5rem;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  background: #fff;\n  color: #000;\n  font-size: 14px;\n}\n\n.new-branch {\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n}\n\n.new-branch input {\n  width: 100%;\n  padding: 0.5rem;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  background: #fff;\n  color: #000;\n  font-size: 14px;\n}\n\n.create-branch {\n  padding: 0.5rem;\n  background: #000;\n  color: #fff;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 14px;\n  font-weight: 500;\n}\n\n.create-branch:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.create-branch:hover:not(:disabled) {\n  background: #333;\n}\n\n.loading {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  color: #000;\n}\n\n.spinner {\n  width: 16px;\n  height: 16px;\n  border: 2px solid #ccc;\n  border-top-color: #000;\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n}\n\n@keyframes spin {\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n.section h3 {\n  color: #000;\n  font-weight: 600;\n  margin-bottom: 1rem;\n  padding: 0 1rem;\n}\n\n.login-prompt {\n  color: #6c757d;\n  font-size: 0.9rem;\n  text-align: center;\n  padding: 1rem;\n  background: #e9ecef;\n  border-radius: 4px;\n}\n\n.pr-actions-header {\n  margin-bottom: 1rem;\n  padding: 0 0 1rem;\n  border-bottom: 1px solid #eee;\n}\n\n.create-pr-button {\n  padding: 0.5rem 1rem;\n  background: #000;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  font-size: 0.9rem;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s;\n}\n\n.create-pr-button:hover {\n  background: #1a1a1a;\n}\n</style>\n"],"version":3}