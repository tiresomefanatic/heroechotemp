import{f as j,g as z,h as y,i as p,m as $,j as I,k as E,l as w,_ as O,n as q,p as B,q as D,r as F,o as n,s as T,w as h,c as d,v as u,x as g,y as b,z as P,A as V,B as M,C as v,D as R,E as U,b as J,a as x,F as f,t as C}from"./C0-p3GDq.js";const G=(e,a,t,s,r=!1)=>{const o=j(),i=z(),c=y(()=>{var k;const l=p(a),N=p(t),m=p(s);return $((l==null?void 0:l.strategy)||((k=i.ui)==null?void 0:k.strategy),m?{wrapper:m}:{},l||{},r?I(i.ui,e,{}):{},N||{})}),A=y(()=>E(o,["class"]));return{ui:c,attrs:A}},S={base:"invisible before:visible before:block before:rotate-45 before:z-[-1] before:w-2 before:h-2",ring:"before:ring-1 before:ring-gray-200 dark:before:ring-gray-800",rounded:"before:rounded-sm",background:"before:bg-gray-200 dark:before:bg-gray-800",shadow:"before:shadow",placement:"group-data-[popper-placement*='right']:-left-1 group-data-[popper-placement*='left']:-right-1 group-data-[popper-placement*='top']:-bottom-1 group-data-[popper-placement*='bottom']:-top-1"},_={container:"z-20 group",trigger:"flex items-center w-full",width:"w-full",height:"max-h-60",base:"relative focus:outline-none overflow-y-auto scroll-py-1",background:"bg-white dark:bg-gray-800",shadow:"shadow-lg",rounded:"rounded-md",padding:"p-1",ring:"ring-1 ring-gray-200 dark:ring-gray-700",empty:"text-sm text-gray-400 dark:text-gray-500 px-2 py-1.5",option:{base:"cursor-default select-none relative flex items-center justify-between gap-1",rounded:"rounded-md",padding:"px-1.5 py-1.5",size:"text-sm",color:"text-gray-900 dark:text-white",container:"flex items-center gap-1.5 min-w-0",active:"bg-gray-100 dark:bg-gray-900",inactive:"",selected:"pe-7",disabled:"cursor-not-allowed opacity-50",empty:"text-sm text-gray-400 dark:text-gray-500 px-2 py-1.5",icon:{base:"flex-shrink-0 h-5 w-5",active:"text-gray-900 dark:text-white",inactive:"text-gray-400 dark:text-gray-500"},selectedIcon:{wrapper:"absolute inset-y-0 end-0 flex items-center",padding:"pe-2",base:"h-5 w-5 text-gray-900 dark:text-white flex-shrink-0"},avatar:{base:"flex-shrink-0",size:"2xs"},chip:{base:"flex-shrink-0 w-2 h-2 mx-1 rounded-full"}},transition:{leaveActiveClass:"transition ease-in duration-100",leaveFromClass:"opacity-100",leaveToClass:"opacity-0"},popper:{placement:"bottom-end"},default:{selectedIcon:"i-heroicons-check-20-solid",trailingIcon:"i-heroicons-chevron-down-20-solid",empty:{label:"No options."},optionEmpty:{label:'No results for "{query}".'}},arrow:{...S,ring:"before:ring-1 before:ring-gray-200 dark:before:ring-gray-700",background:"before:bg-white dark:before:bg-gray-700"}};({..._,option:{..._.option},arrow:{...S}});const H={base:"",background:"bg-white dark:bg-gray-900",divide:"divide-y divide-gray-200 dark:divide-gray-800",ring:"ring-1 ring-gray-200 dark:ring-gray-800",rounded:"rounded-lg",shadow:"shadow",body:{base:"",background:"",padding:"px-4 py-5 sm:p-6"},header:{base:"",background:"",padding:"px-4 py-5 sm:px-6"},footer:{base:"",background:"",padding:"px-4 py-4 sm:px-6"}},L=$(w.ui.strategy,w.ui.card,H),W=q({inheritAttrs:!1,props:{as:{type:String,default:"div"},class:{type:[String,Object,Array],default:()=>""},ui:{type:Object,default:()=>({})}},setup(e){const{ui:a,attrs:t}=G("card",B(e,"ui"),L),s=y(()=>D(F(a.value.base,a.value.rounded,a.value.divide,a.value.ring,a.value.shadow,a.value.background),e.class));return{ui:a,attrs:t,cardClass:s}}});function K(e,a,t,s,r,o){return n(),T(V(e.$attrs.onSubmit?"form":e.as),P({class:e.cardClass},e.attrs),{default:h(()=>[e.$slots.header?(n(),d("div",{key:0,class:u([e.ui.header.base,e.ui.header.padding,e.ui.header.background])},[g(e.$slots,"header")],2)):b("",!0),e.$slots.default?(n(),d("div",{key:1,class:u([e.ui.body.base,e.ui.body.padding,e.ui.body.background])},[g(e.$slots,"default")],2)):b("",!0),e.$slots.footer?(n(),d("div",{key:2,class:u([e.ui.footer.base,e.ui.footer.padding,e.ui.footer.background])},[g(e.$slots,"footer")],2)):b("",!0)]),_:3},16,["class"])}const Q=O(W,[["render",K]]),X={class:"flex min-h-screen items-center justify-center"},Y={key:0,class:"text-red-500"},Z={key:1},ee={class:"text-sm text-gray-500"},re={__name:"callback",setup(e){const a=M(),t=v(null),s=v("");return R(async()=>{try{const r=a.query.code;if(s.value=`Code: ${r}`,r){const o=await fetch("/api/auth/token",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({code:r})});if(!o.ok){const c=await o.json();throw new Error(c.error||"Failed to exchange code for token")}const i=await o.json();localStorage.setItem("github_token",i.access_token),U("/",{replace:!0})}else t.value="No authorization code found in URL"}catch(r){console.error("Authentication error:",r),t.value="Failed to authenticate with GitHub",s.value=`Error: ${r.message}`}}),(r,o)=>{const i=Q;return n(),d("div",X,[J(i,null,{header:h(()=>o[0]||(o[0]=[x("h3",{class:"text-xl font-semibold"},"Authenticating...",-1)])),default:h(()=>[f(t)?(n(),d("p",Y,C(f(t)),1)):(n(),d("p",Z,"Please wait while we complete your authentication...")),x("p",ee,"Debug info: "+C(f(s)),1)]),_:1})])}}};export{re as default};
